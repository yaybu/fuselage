========
fuselage
========

0.0.11 (2015-08-27)
-------------------

- Code cleanup

- More tests


0.0.10 (2015-08-27)
-------------------

- Don't split mid line as you could split a unicode character in half. Which
  paramiko can choke on when using readline.


0.0.9 (2015-06-14)
------------------

- Fix regression in shell streaming introduced in 0.0.7.


0.0.8 (2015-06-14)
------------------

- ``If File.contents`` is ``None`` then fuselage will ensure the file exists
  with the correct permissions but won't empty it. To empty a file set contents
  to ``''``.


0.0.7 (2015-05-18)
------------------

- We now test file creation and removal on our Windows builders.


0.0.6 (2015-05-12)
------------------

- Fix the runner on py3. json.loads won't accept bytes.


0.0.5 (2015-05-11)
------------------

- The tests are now run on Windows via AppVeyor.

- Better handling of PolicyArguments (mitchellrj).


0.0.4 (2015-04-05)
------------------

- The state directory (which is used to make sure that interupted tasks can be
  safely resumed) is now configurable. This means it is now safe to run
  multiple fuselage deployments in parallel (where it makes sense to do so).
  It's now also possible to run fuselage as a normal user (mitchellrj).

- The fuselage runner can be told to not raise an exception if no changes were
  made (mitchellrj).

- Shell commands can now be told to ignore failure cases (mitchellrj).

- Further python 3 support fixes (mitchellrj).


0.0.3 (2015-03-22)
------------------

- Embed ``File.source`` assets in fuselage bundles properly (instead of
  including them in the JSON payload).

- For SVN, always run EnsureDirectory to ensure can checkout to directory. Only
  svn co if no .svn directory. This will fail if directory isnt empty.

- Various python 3 fixes (thanks mitchellrj)

- Various OSX fixes.


0.0.2 (2014-10-06)
------------------

- ``Execute`` resources are now implicitly named by taking the command or
  commands parameters and filterning non-ascii non-alphanumeric characters out.
  For example, an Execute that did ``touch /foo`` would be implicitly named
  ``touch-foo``.

- Extend ``changes.ShellCommand`` so that it can be instructed to log something
  other than command.

- Clean up temporary files after execution.

- Add a ``ResourceBundle.from_iterator()`` convenience method. When used with
  generators it will throw validation errors at the point where the resource
  was yielded.

- Add a new ``ResoureBundle.extend`` convenience method.

- Add support for ``--simulate`` flag passing in fabric backend.

- Add support for ``Yum`` packages.

- Add a ``sensitve`` flag to ``File``, ``Line`` and ``Patch``.

- Resources that take ``owner`` as a parameter now default to the current user instead of ``root``.

- Resources that take ``group`` now default to the primary group of ``owner`` instead of ``root``.

- Fixed the ``Service`` resource.

- Add some more helpers around fabric support.

- Fabric bundles can be converted into Docker containers.


0.0.1 (2014-07-06)
------------------

- Initial preview release.
