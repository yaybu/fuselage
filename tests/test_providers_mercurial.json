{"tests.test_providers_mercurial.TestHg.test_tag_to_tag": [["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291189, 1434290531, 1434291189], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291189, 1434290531, 1434291189], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [100, "Reading package lists...", "E"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Get:1 http://security.ubuntu.com precise-security Release.gpg [198 B]\n", ""], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Reading package lists...", "debconf: delaying package configuration, since apt-utils is not installed\n"], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", true, null], ["stat", [16893, 2, 4216581, 0, 0, 0, 4096, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", false, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221301, 0, 0, 0, 93, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221302, 0, 0, 0, 2189, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["pulling from https://bitbucket.org/Jc2k/pkl/\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes\nadded 737 changesets with 1246 changes to 103 files\n(run 'hg update' to get a working copy)\n", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["63 files updated, 0 files merged, 0 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291189, 1434290531, 1434291189], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291209, 1434291209, 1434291209], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291189, 1434290531, 1434291189], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291209, 1434291209, 1434291209], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [255, "", "abort: UPDATE: Checkout is at '['549954d7a0d7']', target '3.8' is at revision '['ce314407ffb0']'\n"], "SystemError"], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291189, 1434290531, 1434291189], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291209, 1434291209, 1434291209], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [255, "", "abort: UPDATE: Checkout is at '['549954d7a0d7']', target '3.8' is at revision '['ce314407ffb0']'\n"], "SystemError"], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["10 files updated, 0 files merged, 4 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291189, 1434290531, 1434291189], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 4, 4216581, 0, 0, 0, 4096, 1434291212, 1434291212, 1434291212], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291208, 1434291208, 1434291208], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null]], "tests.test_providers_mercurial.TestHg.test_checkout_tag": [["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291139, 1434290531, 1434291139], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291139, 1434290531, 1434291139], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [100, "Reading package lists...", "E"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Get:1 http://uk.archive.ubuntu.com precise Release.gpg [198 B]\n", ""], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Reading package lists...", "debconf: delaying package configuration, since apt-utils is not installed\n"], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", true, null], ["stat", [16893, 2, 4216581, 0, 0, 0, 4096, 1434291166, 1434291166, 1434291166], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", false, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221301, 0, 0, 0, 93, 1434291166, 1434291166, 1434291166], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221302, 0, 0, 0, 2189, 1434291166, 1434291166, 1434291166], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["pulling from https://bitbucket.org/Jc2k/pkl/\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes\nadded 737 changesets with 1246 changes to 103 files\n(run 'hg update' to get a working copy)\n", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["59 files updated, 0 files merged, 0 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291139, 1434290531, 1434291139], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 4, 4216581, 0, 0, 0, 4096, 1434291168, 1434291168, 1434291168], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291166, 1434291166, 1434291166], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291166, 1434291166, 1434291166], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null]], "tests.test_providers_mercurial.TestHg.test_change_branch": [["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291097, 1434290531, 1434291096], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291097, 1434290531, 1434291096], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [100, "Reading package lists...", "E"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Get:1 http://security.ubuntu.com precise-security Release.gpg [198 B]\n", ""], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Reading package lists...", "debconf: delaying package configuration, since apt-utils is not installed\n"], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", true, null], ["stat", [16893, 2, 4216581, 0, 0, 0, 4096, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", false, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221301, 0, 0, 0, 93, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221302, 0, 0, 0, 2189, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["pulling from https://bitbucket.org/Jc2k/pkl/\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes\nadded 737 changesets with 1246 changes to 103 files\n(run 'hg update' to get a working copy)\n", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["61 files updated, 0 files merged, 0 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291097, 1434290531, 1434291096], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291118, 1434291118, 1434291118], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Up to date", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291097, 1434290531, 1434291096], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291118, 1434291118, 1434291118], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Up to date", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [255, "", "abort: UPDATE: Checkout is at '['00e9b36e4f3f']', target 'issue_84' is at revision '['d9ac715eae35']'\n"], "SystemError"], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291097, 1434290531, 1434291096], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291118, 1434291118, 1434291118], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Up to date", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [255, "", "abort: UPDATE: Checkout is at '['00e9b36e4f3f']', target 'issue_84' is at revision '['d9ac715eae35']'\n"], "SystemError"], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["33 files updated, 0 files merged, 0 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291097, 1434290531, 1434291096], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291121, 1434291121, 1434291121], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291116, 1434291116, 1434291116], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Up to date", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null]], "tests.test_providers_mercurial.TestHg.test_branch_to_tag": [["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291077, 1434290531, 1434291077], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291077, 1434290531, 1434291077], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [100, "Reading package lists...", "E"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Get:1 http://uk.archive.ubuntu.com precise Release.gpg [198 B]\n", ""], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Reading package lists...", "debconf: delaying package configuration, since apt-utils is not installed\n"], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", true, null], ["stat", [16893, 2, 4216581, 0, 0, 0, 4096, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", false, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221301, 0, 0, 0, 93, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221302, 0, 0, 0, 2189, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["pulling from https://bitbucket.org/Jc2k/pkl/\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes\nadded 737 changesets with 1246 changes to 103 files\n(run 'hg update' to get a working copy)\n", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["61 files updated, 0 files merged, 0 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291077, 1434290531, 1434291077], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291093, 1434291093, 1434291093], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Up to date", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291077, 1434290531, 1434291077], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291093, 1434291093, 1434291093], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [255, "", "abort: UPDATE: Checkout is at '['00e9b36e4f3f']', target '3.8' is at revision '['ce314407ffb0']'\n"], "SystemError"], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291077, 1434290531, 1434291077], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291093, 1434291093, 1434291093], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [255, "", "abort: UPDATE: Checkout is at '['00e9b36e4f3f']', target '3.8' is at revision '['ce314407ffb0']'\n"], "SystemError"], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["53 files updated, 0 files merged, 6 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291077, 1434290531, 1434291077], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 4, 4216581, 0, 0, 0, 4096, 1434291095, 1434291095, 1434291095], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291091, 1434291091, 1434291091], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Tag is already available locally", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null]], "tests.test_providers_mercurial.TestHg.test_missing_hg": [["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291189, 1434290531, 1434291189], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null]], "tests.test_providers_mercurial.TestHg.test_checkout_revision": [["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291122, 1434290531, 1434291122], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [100, "Reading package lists...", "E"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Get:1 http://security.ubuntu.com precise-security Release.gpg [198 B]\n", ""], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Reading package lists...", "debconf: delaying package configuration, since apt-utils is not installed\n"], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", true, null], ["stat", [16893, 2, 4216581, 0, 0, 0, 4096, 1434291136, 1434291136, 1434291136], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", false, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221301, 0, 0, 0, 93, 1434291136, 1434291136, 1434291136], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221302, 0, 0, 0, 2189, 1434291136, 1434291136, 1434291136], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["pulling from https://bitbucket.org/Jc2k/pkl/\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes\nadded 737 changesets with 1246 changes to 103 files\n(run 'hg update' to get a working copy)\n", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["59 files updated, 0 files merged, 0 files removed, 0 files unresolved\n", ""], null], ["exists", false, null]], "tests.test_providers_mercurial.TestHg.test_clone": [["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291169, 1434290531, 1434291169], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["makedirs", null, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291169, 1434290531, 1434291169], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", [1, "", "No packages found matching mercurial.\n"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", [100, "Reading package lists...", "E"], "SystemError"], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Get:1 http://security.ubuntu.com precise-security Release.gpg [198 B]\n", ""], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["Reading package lists...", "debconf: delaying package configuration, since apt-utils is not installed\n"], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", true, null], ["stat", [16893, 2, 4216581, 0, 0, 0, 4096, 1434291186, 1434291186, 1434291186], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["exists", false, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221301, 0, 0, 0, 93, 1434291186, 1434291186, 1434291186], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", false, null], ["put", null, null], ["exists", true, null], ["stat", [33204, 1, 4221302, 0, 0, 0, 2189, 1434291186, 1434291186, 1434291186], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["pulling from https://bitbucket.org/Jc2k/pkl/\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes\nadded 737 changesets with 1246 changes to 103 files\n(run 'hg update' to get a working copy)\n", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["exists", false, null], ["exists", false, null], ["exists", false, null], ["exists", true, null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["isdir", true, null], ["check_call", ["61 files updated, 0 files merged, 0 files removed, 0 files unresolved\n", ""], null], ["exists", false, null], ["exists", true, null], ["exists", true, null], ["exists", false, null], ["isdir", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise main restricted universe multiverse\ndeb http://uk.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu precise-security main restricted universe multiverse\n", null], ["exists", true, null], ["stat", [33188, 2, 3770421, 0, 0, 0, 270, 1434291169, 1434290531, 1434291169], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["check_call", ["'install ok installed'", ""], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["exists", true, null], ["stat", [16877, 5, 4216581, 0, 0, 0, 4096, 1434291188, 1434291188, 1434291188], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["exists", true, null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\n[paths]\ndefault = https://bitbucket.org/Jc2k/pkl/\n[extensions]\nshould = /dest/.hg/should.py\n", null], ["exists", true, null], ["stat", [33152, 1, 4221301, 0, 0, 0, 93, 1434291186, 1434291186, 1434291186], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrgid", ["root", "x", 0, [""]], null], ["exists", true, null], ["get", "\nfrom mercurial import util, hg, node\n\ndef should_pull(ui, repo, **opts):\n    default_path = repo.ui.configlist('paths', 'default')[0]\n\n    if not hasattr(hg, \"peer\"):\n        source, revs, checkout = hg.parseurl(ui.expandpath(default_path), [])\n        peer = hg.repository(ui, source)\n    else:\n        peer = hg.peer(ui, {}, default_path)\n\n    remote_branches = peer.branchmap()\n    local_branches = repo.branchmap()\n\n    if opts['branch'] not in remote_branches:\n        raise util.Abort('NO_SUCH_BRANCH: \"%s\" is not in the repository' % opts['branch'])\n\n    if opts['branch'] not in local_branches:\n        raise util.Abort('PULL: \"%s\" in not local, but is available in remote' % opts['branch'])\n\n    if not opts['tag']:\n        if remote_branches[opts['branch']] != local_branches[opts['branch']]:\n            raise util.Abort('PULL: \"%s\" is out of date' % opts['branch'])\n\n        ui.write(\"OK: Up to date\")\n\n    else:\n        if not opts['tag'] in repo.tags().keys():\n           raise util.Abort('PULL: \"%s\" is not in local' % opts['tag'])\n\n        ui.write(\"OK: Tag is already available locally\")\n\n\ndef should_update(ui, repo, **opts):\n    if opts['tag']:\n        target = opts['tag']\n        revmap = repo.tags()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Tag '%s' not found locally\" % target)\n        targetrev = [revmap[target]]\n    else:\n        target = opts['branch']\n        revmap = repo.branchmap()\n        if not target in revmap:\n            raise util.Abort(\"FAIL: Branch '%s' not found locally\" % target)\n        targetrev = revmap[target]\n\n    localrev = [node.short(p.node()) for p in repo[None].parents()]\n    targetrev = [node.short(p) for p in targetrev]\n\n    if localrev != targetrev:\n        raise util.Abort(\"UPDATE: Checkout is at '%s', target '%s' is at revision '%s'\" % (localrev, target, targetrev))\n\n    ui.write(\"OK: Checkout is up to date\")\n\n\ncmdtable = {\n    'should-pull': (should_pull, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    'should-update': (should_update, [('b', 'branch', 'default', 'Branch to track'), ('t', 'tag', '', 'Tag to track')], '[options]'),\n    }\n", null], ["exists", true, null], ["stat", [33152, 1, 4221302, 0, 0, 0, 2189, 1434291186, 1434291186, 1434291186], null], ["getpwnam", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["getgrnam", ["root", "x", 0, [""]], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Up to date", ""], null], ["getuid", 0, null], ["getpwuid", ["root", "x", 0, 0, "root", "/root", "/bin/bash"], null], ["check_call", ["OK: Checkout is up to date", ""], null]]}